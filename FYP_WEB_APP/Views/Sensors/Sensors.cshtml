
@{
    List<FYP_WEB_APP.Models.SensorsListModel> Sensors = ViewData["SensorsListModel"] as List<FYP_WEB_APP.Models.SensorsListModel>;

    List<FYP_WEB_APP.Models.RoomsListModel> Rooms = ViewData["RoomListModel"] as List<FYP_WEB_APP.Models.RoomsListModel>;
    ViewData["Title"] = "Sensors";
    Layout = "_Layout";
}
<globalization requestEncoding="utf-8" responseEncoding="utf-8" />


<head>
    <link rel="stylesheet" href="~/css/style.css">
    <meta charset="UTF-8">

    <script src="~/js/Chart.min.js"></script>
    <!--https://www.chartjs.org/-->
    <link rel="stylesheet" href="~/css/bootstrap.min.css">
    <script src="~/js/jquery.min.js"></script>
    <script src="~/js/popper.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <script src="~/js/heatmap.js"></script>
    <script src="~/js/heatmap.min.js"></script>
    <script src="~/js/prism.js"></script>
    <!--loading js-->
    <script src="~/js/modernizr.js"></script>
    <script src="~/js/jquery-2.2.4.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <!--loading js-->

    <title>Sensors</title>
    <script>
        $(document).ready(function () {
            //navbar ui
            $('.navbar-nav .nav-link').removeClass('active');
            $("#sensors").addClass('active');

            //<!--loading js-->

        });

        $(window).load(function () {
            // Animate loader off screen
            $(".se-pre-con").fadeOut("fast");
        });
    </script>
</head>


<body class="">
    <!--loading page graphic-->
    <div class="se-pre-con"></div>
    @Html.Partial("_AddSensors")

    <!--loading page graphic-->
    <!--header-->
    <!--header-->
    <div class="main  ">
        <div class=" bg-light p-3">

            <div class="d-flex flex-column">
                <div class="container-fluid ">
                    <div class=" h2"><b>Sensor</b></div>
                </div>
                <div class="d-flex flex-row  mb-2 p-2">
                    <div class="  col">
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="inputGroup-sizing-default">
                                    <svg xmlns="http://www.w3.org/2000/svg" version="1.0" width="15.000000pt"
                                         height="15.000000pt" viewBox="0 0 240.000000 240.000000"
                                         preserveAspectRatio="xMidYMid meet">
                                        <g transform="translate(0.000000,240.000000) scale(0.100000,-0.100000)"
                                           fill="#000000" stroke="none">
                                            <path d="M721 2379 c-259 -58 -457 -198 -591 -418 -76 -123 -130 -316 -130 -458 0 -101 38 -269 83 -366 133 -287 398 -479 716 -517 121 -15 251 -1 375 41 l90 30 346 -346 c233 -233 352 -345 366 -345 38 0 138 40 192 77 107 73 198 207 210 309 l5 46 -341 342 -341 341 34 100 c46 136 61 255 46 381 -46 393 -316 693 -699 780 -130 29 -242 30 -361 3z m387 -315 c182 -73 318 -225 366 -411 20 -78 20 -218 0 -297 -52 -203 -227 -378 -430 -430 -78 -20 -222 -21 -297 -1 -207 54 -378 225 -432 433 -20 74 -20 221 0 297 49 186 191 343 371 411 127 48 298 47 422 -2z" />
                                        </g>
                                    </svg>
                                </span>
                            </div>
                            <input type="text" class="form-control" placeholder=""
                                   aria-describedby="basic-addon2">
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="button">Search</button>
                            </div>
                        </div>
                    </div>
                </div>
                @using (Html.BeginForm("Sensors", "Sensors", FormMethod.Get))

                {
                    <div class="card d-flex flex-row  mb-2 mx-2 p-2">


                        <div class="col-0 px-2">
                            Fillter
                        </div>
                        <div class="col-10 align-items-center">
                            <div class="col  d-flex  flex-row align-items-center py-2">
                                <div class="d-flex px-3 align-items-center">
                                    type:
                                </div>
                                <div class="d-flex px-3 align-items-center">
                                    @Html.CheckBox("All")All
                                </div>
                                <div class="d-flex px-3 align-items-center">
                                    @Html.CheckBox("Temperature") Temperature
                                </div>
                                <div class="d-flex px-3 align-items-center">
                                    @Html.CheckBox("Light")Light
                                </div>
                                <div class="d-flex px-3 align-items-center">
                                    @Html.CheckBox("Humidity") Humidity

                                </div>
                                <div class="d-flex px-3 align-items-center">
                                    @Html.CheckBox("Luminosity") Luminosity
                                </div>
                            </div>
                            <div class="col-4  d-flex  flex-row py-2">
                                <div class="d-flex px-3 align-items-center">
                                    location:
                                </div>
                                <div d-flex px-3 align-items-center">
                                    <select id="roomId" name="roomId">
                                        <option value="0">Room.No</option>
                                        @foreach (var Room in Rooms)
                                        {

                                            <option value="@Room.roomId">@Room.roomId</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                        <p>
                            <input type="submit" value="search" />
                        </p>

                    </div>


                    <div class="card d-flex flex-column mb-2 mx-2 p-2" style="height: 250px;">
                        <div class="row justify-content-between mb-2">
                            <div class="col">
                                <div class="col h4">
                                    Sensor List
                                </div>

                            </div>
                            <div class="col-4 d-flex justify-content-end">

                                <button class="btn btn-outline-secondary px-2 mr-2 " type="button">edit</button>
                                <button class="btn btn-outline-secondary px-2 mr-2" type="button" data-toggle="modal"
                                        data-target="#addSensors ">
                                    &#43;
                                </button>

                            </div>
                        </div>
                        <div class="overflow-auto ">
                            <table class="table table-striped" id="Divicestable">
                                <thead>
                                    <tr>
                                        <th class="th-sm" scope="col">Sensor Name</th>
                                        <th scope="col">Type</th>
                                        <th scope="col"> Status</th>
                                        <th scope="col">
                                            <a href='@ViewBag.roomIdSortParm'>roomId</a>
                                        </th>
                                        <th scope="col"> Range</th>
                                        <th scope="col">
                                            <a href='@ViewBag.latest_checking_timeSortParm'>latest_checking_time</a>
                                        </th>
                                        <th scope="col"> Serial number</th>
                                        <th scope="col"> Value</th>
                                        <th scope="col"> Tsurn on/off</th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var Sensor in Sensors)
                                    {


                                        <tr>
                                            <td>Ts01</td>
                                            <td>T</td>
                                            <td>online</td>
                                            <td>
                                                @Sensor.roomId
                                            </td>
                                            <td>9000</td>
                                            <td>
                                                @Sensor.latest_checking_time
                                            </td>
                                            <td>3100002a</td>
                                            <td>25c</td>
                                            <td>
                                                <div class="custom-control custom-switch">
                                                    <input type="checkbox" class="custom-control-input" id="customSwitch1"
                                                           checked disabled>
                                                    <label class="custom-control-label" for="customSwitch1"></label>
                                                </div>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
                <div class="card d-flex flex-row mb-2 mx-2 p-2 ">
                    <button class="p-3 mx-2 btn btn-outline-secondary">Sensor report</button>
                    <button class="p-3 mx-2 btn btn-outline-secondary">Log report</button>
                    <button class="p-3 mx-2 btn btn-outline-secondary">Day Log report</button>

                </div>
                <div class="card  mx-2 p-2">
                    <div class=" shadow-sm w-100 h-100 p-3 justify-content-center align-items-center">
                        <div class="container-fluid col-xs-12 col-md-8 pt-4 w-100 px-0">

                            <canvas id="UsageRecordChart"></canvas>
                        </div>
                    </div>
                    <button class="p-3 mx-2 btn btn-outline-secondary">Download the report</button>

                </div>
            </div>
        </div>
    </div>
    <script>
        var chartID = '';
        var charttitle = '';
        var chartType = '';
        var position = '';
        var devices = [];
        var devicesData = [];
        var gcolor = [];
        var gdata;
        var goption;

        getUsageRecordData();

        async function getUsageRecordData() {

            charttitle = 'Sensor Log Record';

            chartID = 'UsageRecordChart';
            chartType = 'line';
            position = 'right';
            devices.push('St01');
            devices.push('St02');
            devices.push('St03');
            var day = [];
            var i;
            for (i = 0; i < 30; i++) {
                day.push(i);
            }
            devices.forEach(getRandomColor);

            //set chart data
            dataop = {
                labels: day,
                datasets: [{
                    label: devices[0],
                    borderColor: gcolor[0],
                    fill: false,
                    data: [65, 59, 80, 81, 56, 55, 40, 50, 60, 55, 30, 78],
                }, {
                    label: devices[1],
                    borderColor: gcolor[1],
                    fill: false,
                    data: [10, 20, 60, 95, 64, 78, 90, 80, 70, 40, 70, 89],
                    spanGaps: false,
                }, {
                    label: devices[2],
                    borderColor: gcolor[2],
                    fill: false,
                    data: [30, 20, 80, 50, 64, 78, 100, 40, 50, 40, 75, 90],
                    spanGaps: false,
                }

                ]
            };
            //set chart option
            goption = {
                title: {
                    display: true,
                    text: charttitle,
                    fontSize: 25,
                },
                legend: {
                    display: true,
                    position: position,
                    labels: {
                        boxWidth: 20,
                        fontColor: '#111',
                        padding: 15
                    }
                }
            };
            draw();

        }

        //---------------------------------------------------------------------------------
        function getRandomColor() {
            var letters = '0123456789ABCDEF';
            var color = '#';
            for (var i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            gcolor.push(color);
        }

        function draw() {

            let myChart = document.getElementById(chartID).getContext('2d');
            // Global Options
            Chart.defaults.global.defaultFontFamily = 'Lato';
            Chart.defaults.global.defaultFontSize = 18;
            Chart.defaults.global.defaultFontColor = '#777';


            let barChart = new Chart(myChart, {
                type: chartType,//bar,horizontalBar,pie,line,doughnut,radar,polarArea
                data: dataop,
                options: goption
            });
        }
                                                                //--------------------------------------------------------------------------</script>
</body>